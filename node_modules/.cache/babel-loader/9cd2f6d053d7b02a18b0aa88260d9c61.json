{"ast":null,"code":"import _classCallCheck from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/brian/.nvm/react-weather-app/src/views/ForecastHourly/ForecastHourly.js\";\nimport React from 'react';\n\nvar ForecastHourly =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ForecastHourly, _React$Component);\n\n  function ForecastHourly() {\n    _classCallCheck(this, ForecastHourly);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ForecastHourly).apply(this, arguments));\n  }\n\n  _createClass(ForecastHourly, [{\n    key: \"render\",\n    //save date as varaible\n    // check each item, if date is different, render a new card for that day\n    // be able to click on the card ,takes you to details component which shows hourly report\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"forecastHourly\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      },\n      /* {this.props.forecastDataArray &&  this.props.forecastDataArray.map(function(item){\n           return(\n                 <div className=\"hourlyWeatherCard\">\n                       <div className=\"fieldGroup\">\n                             <label>Date: </label>\n                             <span>{item.dt_txt}</span>\n                       </div>\n                       <div className=\"fieldGroup\">\n                             <label>Temp: </label>\n                             <span>{(item.main.temp - 273.15) * (1.8) + 32}</span>\n                       </div>\n                       <div className=\"fieldGroup\">\n                             <label>Weather:</label>\n                             <span>{item.weather[0].description}</span>\n                       </div>\n                   \n                  </div>\n           )\n           \n      })} */\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ForecastHourly;\n}(React.Component);\n\nexport { ForecastHourly as default };","map":{"version":3,"sources":["/Users/brian/.nvm/react-weather-app/src/views/ForecastHourly/ForecastHourly.js"],"names":["React","ForecastHourly","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEqBC,c;;;;;;;;;;;;;AACf;AACA;AACA;6BACQ;AACF,aACM;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACO;;;;;;;;;;;;;;;;;;;;AAsBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvBN,CADN;AA8BL;;;;EAnCqCD,KAAK,CAACE,S;;SAA7BD,c","sourcesContent":["import React from 'react';\n\nexport default class ForecastHourly extends React.Component{\n      //save date as varaible\n      // check each item, if date is different, render a new card for that day\n      // be able to click on the card ,takes you to details component which shows hourly report\n      render(){\n            return(\n                  <div className=\"forecastHourly\">\n                        {/* {this.props.forecastDataArray &&  this.props.forecastDataArray.map(function(item){\n                              return(\n                                    <div className=\"hourlyWeatherCard\">\n                                          <div className=\"fieldGroup\">\n                                                <label>Date: </label>\n                                                <span>{item.dt_txt}</span>\n                                          </div>\n                                          <div className=\"fieldGroup\">\n                                                <label>Temp: </label>\n                                                <span>{(item.main.temp - 273.15) * (1.8) + 32}</span>\n                                          </div>\n                                          <div className=\"fieldGroup\">\n                                                <label>Weather:</label>\n                                                <span>{item.weather[0].description}</span>\n                                          </div>\n\n                                     \n\n                                    </div>\n                              )\n                              \n                        })} */\n                        <div></div>\n                        }\n                        \n                        \n                  </div>\n            )\n      }\n}"]},"metadata":{},"sourceType":"module"}