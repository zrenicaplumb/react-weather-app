{"ast":null,"code":"import _classCallCheck from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/brian/.nvm/react-weather-app/src/components/Forecast.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport ForecastHourly from '../views/ForecastHourly/ForecastHourly';\n\nvar Forecast =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Forecast, _React$Component);\n\n  function Forecast() {\n    _classCallCheck(this, Forecast);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Forecast).apply(this, arguments));\n  }\n\n  _createClass(Forecast, [{\n    key: \"render\",\n    //save date as variable\n    // check each item, if date is different, render a new card for that day\n    // be able to click on the card ,takes you to details component which shows hourly report\n    // this.K2F = this.k2F.bind(this);\n    // K2F(num){\n    //       let parsedNum = parseFloat(num);\n    //       return (parsedNum-273.15)*(1.8)+32;\n    // }\n    value: function render() {\n      //       const weatherArray = [];\n      //      this.props.forecastDataArray.forEach(function(item){\n      //            item.weather.forEach(function(item){\n      //                   weatherArray.push(item);\n      //            })\n      //      })\n      //      console.log(weatherArray);\n      var prevDate = '';\n      return React.createElement(\"div\", {\n        className: \"forecast\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, this.props.forecastDataArray.map(function (item) {\n        var date = item.dt_txt.slice(9, 10);\n        var weather = item.weather[0];\n        console.log(item);\n\n        if (date != prevDate) {\n          prevDate = date;\n          return React.createElement(\"div\", {\n            className: \"fieldGroup\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, React.createElement(ForecastHourly, {\n            forecastHourlyInfo: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, Math.round((item.main.temp - 273.15) * 1.8 + 32) + ' F'), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, weather.main), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, item.dt_txt.slice(0, 10)));\n        }\n      }));\n    }\n  }]);\n\n  return Forecast;\n}(React.Component);\n\nexport { Forecast as default };","map":{"version":3,"sources":["/Users/brian/.nvm/react-weather-app/src/components/Forecast.js"],"names":["React","Link","ForecastHourly","Forecast","prevDate","props","forecastDataArray","map","item","date","dt_txt","slice","weather","console","log","Math","round","main","temp","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,cAAP,MAA2B,wCAA3B;;IAEqBC,Q;;;;;;;;;;;;;AACf;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;6BAEQ;AACR;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACM,UAAIC,QAAQ,GAAG,EAAf;AACA,aACM;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEW,KAAKC,KAAL,CAAWC,iBAAX,CAA6BC,GAA7B,CAAiC,UAASC,IAAT,EAAc;AACxC,YAAIC,IAAI,GAAGD,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAoB,EAApB,CAAX;AACA,YAAIC,OAAO,GAAGJ,IAAI,CAACI,OAAL,CAAa,CAAb,CAAd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;;AACA,YAAGC,IAAI,IAAIL,QAAX,EAAoB;AACdA,UAAAA,QAAQ,GAAGK,IAAX;AACA,iBAGY;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACM,oBAAC,cAAD;AACM,YAAA,kBAAkB,EAAC,EADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADN,EAIM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIM,IAAI,CAACC,KAAL,CAAW,CAACR,IAAI,CAACS,IAAL,CAAUC,IAAV,GAAiB,MAAlB,IAA6B,GAA7B,GAAoC,EAA/C,IAAqD,IAAzD,CAJN,EAKM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIN,OAAO,CAACK,IAAZ,CALN,EAMM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIT,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAoB,EAApB,CAAJ,CANN,CAHZ;AAgBL;AAEP,OAxBD,CAFX,CADN;AAiCL;;;;EAzD+BX,KAAK,CAACmB,S;;SAAvBhB,Q","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\nimport ForecastHourly from '../views/ForecastHourly/ForecastHourly';\n\nexport default class Forecast extends React.Component{\n      //save date as variable\n      // check each item, if date is different, render a new card for that day\n      // be able to click on the card ,takes you to details component which shows hourly report\n\n      // this.K2F = this.k2F.bind(this);\n\n      // K2F(num){\n      //       let parsedNum = parseFloat(num);\n      //       return (parsedNum-273.15)*(1.8)+32;\n      // }\n      \n      render(){\n      //       const weatherArray = [];\n            \n      //      this.props.forecastDataArray.forEach(function(item){\n      //            item.weather.forEach(function(item){\n      //                   weatherArray.push(item);\n                        \n      //            })\n                 \n      //      })\n      //      console.log(weatherArray);\n            let prevDate = '';\n            return(\n                  <div className=\"forecast\">\n                       {\n                             this.props.forecastDataArray.map(function(item){\n                                    let date = item.dt_txt.slice(9,10);\n                                    let weather = item.weather[0];\n                                    console.log(item);\n                                    if(date != prevDate){\n                                          prevDate = date;\n                                          return(\n                                                      \n                                                      \n                                                      <div className=\"fieldGroup\" >\n                                                            <ForecastHourly \n                                                                  forecastHourlyInfo=\"\"\n                                                            />\n                                                            <p>{Math.round((item.main.temp - 273.15) * (1.8) + 32) + ' F'}</p>\n                                                            <p>{weather.main}</p>\n                                                            <p>{item.dt_txt.slice(0,10)}</p>\n                                                      </div>\n                                             \n                                                \n\n                                          )\n                                        \n                                    }\n\n                             })\n                       }\n                        \n                        \n                  </div>\n            )\n      }\n}"]},"metadata":{},"sourceType":"module"}