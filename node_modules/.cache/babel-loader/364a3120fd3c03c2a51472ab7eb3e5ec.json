{"ast":null,"code":"import _regeneratorRuntime from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/brian/.nvm/react-weather-app/src/App.js\";\nimport React from 'react';\nimport Titles from './components/Titles';\nimport Form from './components/Form';\nimport Weather from './components/Weather';\nimport './bootstrap.min.css';\nimport './styles.css';\nvar API_KEY = \"016a6f0bc508419a9a9bbb66139efee0\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      temperature: undefined,\n      humidity: undefined,\n      city: undefined,\n      country: undefined,\n      description: undefined,\n      error: null,\n      forecastDataArray: []\n    };\n    _this.getWeather = _this.getWeather.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"getWeather\",\n    value: function () {\n      var _getWeather = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var app, city, country, currWeatherApiCall, forecastApiCall, currWeatherData, forecastData, forecastArray, weatherArray;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                app = this;\n                e.preventDefault();\n                city = e.target.elements.city.value;\n                country = e.target.elements.country.value;\n                _context.next = 6;\n                return fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY));\n\n              case 6:\n                currWeatherApiCall = _context.sent;\n                _context.next = 9;\n                return fetch(\"https://api.openweathermap.org/data/2.5/forecast?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY));\n\n              case 9:\n                forecastApiCall = _context.sent;\n                _context.next = 12;\n                return currWeatherApiCall.json();\n\n              case 12:\n                currWeatherData = _context.sent;\n                _context.next = 15;\n                return forecastApiCall.json();\n\n              case 15:\n                forecastData = _context.sent;\n                console.log(forecastData.list[0].weather[0].main);\n                console.log(forecastData);\n                forecastArray = [];\n                weatherArray = [];\n                forecastData.list.forEach(function (listItem) {\n                  console.log(listItem);\n                  var date = listItem.dt_txt;\n                  var temp = listItem.main.temp;\n                  forecastArray.push();\n                  var weather = listItem.weather.forEach(function (weatherItem) {\n                    array.push(weatherItem);\n                  });\n                });\n                this.setState({\n                  temperature: currWeatherData.main.temp,\n                  humidity: currWeatherData.main.humidity,\n                  city: currWeatherData.name,\n                  country: currWeatherData.sys.country,\n                  description: currWeatherData.weather[0].description,\n                  error: null\n                });\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function getWeather(_x) {\n        return _getWeather.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Titles, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(Form, {\n        getWeather: this.getWeather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Weather, {\n        humidity: this.state.humidity,\n        city: this.state.city,\n        country: this.state.country,\n        error: this.state.error,\n        description: this.state.description,\n        temperature: this.state.temperature,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/brian/.nvm/react-weather-app/src/App.js"],"names":["React","Titles","Form","Weather","API_KEY","App","props","state","temperature","undefined","humidity","city","country","description","error","forecastDataArray","getWeather","bind","e","app","preventDefault","target","elements","value","fetch","currWeatherApiCall","forecastApiCall","json","currWeatherData","forecastData","console","log","list","weather","main","forecastArray","weatherArray","forEach","listItem","date","dt_txt","temp","push","weatherItem","array","setState","name","sys","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,qBAAP;AACA,OAAO,cAAP;AAEA,IAAMC,OAAO,GAAG,kCAAhB;;IAEqBC,G;;;;;AACf,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACZ,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACPC,MAAAA,WAAW,EAACC,SADL;AAEPC,MAAAA,QAAQ,EAACD,SAFF;AAGPE,MAAAA,IAAI,EAACF,SAHE;AAIPG,MAAAA,OAAO,EAACH,SAJD;AAKPI,MAAAA,WAAW,EAACJ,SALL;AAMPK,MAAAA,KAAK,EAAC,IANC;AAOPC,MAAAA,iBAAiB,EAAC;AAPX,KAAb;AASA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AAXY;AAYjB;;;;;;;gDAEgBC,C;;;;;;AACPC,gBAAAA,G,GAAM,I;AACVD,gBAAAA,CAAC,CAACE,cAAF;AACMT,gBAAAA,I,GAAOO,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBX,IAAlB,CAAuBY,K;AAC9BX,gBAAAA,O,GAAUM,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBV,OAAlB,CAA0BW,K;;uBACTC,KAAK,6DAAsDb,IAAtD,cAA8DC,OAA9D,oBAA+ER,OAA/E,E;;;AAAhCqB,gBAAAA,kB;;uBACwBD,KAAK,8DAAuDb,IAAvD,cAA+DC,OAA/D,oBAAgFR,OAAhF,E;;;AAA7BsB,gBAAAA,e;;uBACwBD,kBAAkB,CAACE,IAAnB,E;;;AAAxBC,gBAAAA,e;;uBACqBF,eAAe,CAACC,IAAhB,E;;;AAArBE,gBAAAA,Y;AACNC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,YAAY,CAACG,IAAb,CAAkB,CAAlB,EAAqBC,OAArB,CAA6B,CAA7B,EAAgCC,IAA5C;AACAJ,gBAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AAEIM,gBAAAA,a,GAAgB,E;AAChBC,gBAAAA,Y,GAAe,E;AACnBP,gBAAAA,YAAY,CAACG,IAAb,CAAkBK,OAAlB,CAA0B,UAASC,QAAT,EAAkB;AAEtCR,kBAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACA,sBAAMC,IAAI,GAAGD,QAAQ,CAACE,MAAtB;AACA,sBAAMC,IAAI,GAAGH,QAAQ,CAACJ,IAAT,CAAcO,IAA3B;AACAN,kBAAAA,aAAa,CAACO,IAAd;AACA,sBAAMT,OAAO,GAAGK,QAAQ,CAACL,OAAT,CAAiBI,OAAjB,CAAyB,UAASM,WAAT,EAAqB;AACxDC,oBAAAA,KAAK,CAACF,IAAN,CAAWC,WAAX;AAEL,mBAHe,CAAhB;AAOL,iBAbD;AAsBA,qBAAKE,QAAL,CAAc;AACRrC,kBAAAA,WAAW,EAACoB,eAAe,CAACM,IAAhB,CAAqBO,IADzB;AAER/B,kBAAAA,QAAQ,EAACkB,eAAe,CAACM,IAAhB,CAAqBxB,QAFtB;AAGRC,kBAAAA,IAAI,EAACiB,eAAe,CAACkB,IAHb;AAIRlC,kBAAAA,OAAO,EAACgB,eAAe,CAACmB,GAAhB,CAAoBnC,OAJpB;AAKRC,kBAAAA,WAAW,EAACe,eAAe,CAACK,OAAhB,CAAwB,CAAxB,EAA2BpB,WAL/B;AAMRC,kBAAAA,KAAK,EAAC;AANE,iBAAd;;;;;;;;;;;;;;;;6BAaE;AACF,aACM;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADN,EAEM,oBAAC,IAAD;AACM,QAAA,UAAU,EAAE,KAAKE,UADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFN,EAKM,oBAAC,OAAD;AACM,QAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWG,QAD3B;AAEM,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWI,IAFvB;AAGM,QAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWK,OAH1B;AAIM,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWO,KAJxB;AAKM,QAAA,WAAW,EAAE,KAAKP,KAAL,CAAWM,WAL9B;AAMM,QAAA,WAAW,EAAE,KAAKN,KAAL,CAAWC,WAN9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALN,CADN;AAqBL;;;;EAtF0BR,KAAK,CAACgD,S;;SAAlB3C,G","sourcesContent":["import React from 'react';\nimport Titles from './components/Titles';\nimport Form from './components/Form';\nimport Weather from './components/Weather';\nimport './bootstrap.min.css';\nimport './styles.css';\n\nconst API_KEY = \"016a6f0bc508419a9a9bbb66139efee0\";\n\nexport default class App extends React.Component{\n      constructor(props){\n            super(props);\n            this.state = {\n                  temperature:undefined,\n                  humidity:undefined,\n                  city:undefined,\n                  country:undefined,\n                  description:undefined,\n                  error:null,\n                  forecastDataArray:[],\n            }\n            this.getWeather = this.getWeather.bind(this);\n      }\n\n      async getWeather(e){    \n            let app = this;\n            e.preventDefault();\n            const city = e.target.elements.city.value;\n            const country = e.target.elements.country.value;\n            const currWeatherApiCall = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`);\n            const forecastApiCall = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${API_KEY}`);\n            const currWeatherData = await currWeatherApiCall.json();\n            const forecastData = await forecastApiCall.json();\n            console.log(forecastData.list[0].weather[0].main);\n            console.log(forecastData);\n\n            let forecastArray = [];\n            let weatherArray = [];\n            forecastData.list.forEach(function(listItem){\n                  \n                  console.log(listItem);        \n                  const date = listItem.dt_txt;\n                  const temp = listItem.main.temp\n                  forecastArray.push()\n                  const weather = listItem.weather.forEach(function(weatherItem){\n                        array.push(weatherItem)\n\n                  })      \n                  \n                 \n                  \n            });\n           \n           \n            \n            \n                  \n            \n            \n            \n            this.setState({\n                  temperature:currWeatherData.main.temp,\n                  humidity:currWeatherData.main.humidity,\n                  city:currWeatherData.name,\n                  country:currWeatherData.sys.country,\n                  description:currWeatherData.weather[0].description,\n                  error:null,\n                  \n                 \n            })\n            \n      }\n\n      render(){\n            return(\n                  <div className=\"container\">\n                        <Titles/>\n                        <Form \n                              getWeather={this.getWeather}\n                        />\n                        <Weather \n                              humidity={this.state.humidity}\n                              city={this.state.city}\n                              country={this.state.country}\n                              error={this.state.error}\n                              description={this.state.description}\n                              temperature={this.state.temperature}\n                              \n\n                        />  \n\n                        \n                  </div>\n                 \n            )\n      }\n}\n"]},"metadata":{},"sourceType":"module"}