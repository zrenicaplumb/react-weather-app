{"ast":null,"code":"import _regeneratorRuntime from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/brian/.nvm/react-weather-app/src/views/WeatherApp/WeatherApp.js\";\nimport React from 'react';\nimport Titles from '../../components/WeatherApp/Titles';\nimport Form from '../../components/WeatherApp/Form';\nimport Weather from '../../components/WeatherApp/Weather';\nimport Forecast from '../../components/WeatherApp/Forecast';\nimport './styles.css';\nimport ForecastHourly from '../ForecastHourly/ForecastHourly';\nvar API_KEY = \"016a6f0bc508419a9a9bbb66139efee0\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      temperature: undefined,\n      humidity: undefined,\n      city: undefined,\n      country: undefined,\n      description: undefined,\n      error: null,\n      forecastDataArray: [],\n      hourlyWeather: []\n    };\n    _this.getWeather = _this.getWeather.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showHourlyWeather = _this.showHourlyWeather.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fiveDayForecast();\n    }\n  }, {\n    key: \"fiveDayForecast\",\n    value: function () {\n      var _fiveDayForecast = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var app, currWeatherApiCall, currWeatherData, forecastApiCall, hourlyWeather;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                app = this;\n                _context.next = 3;\n                return fetch(\"https://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=\".concat(API_KEY));\n\n              case 3:\n                currWeatherApiCall = _context.sent;\n                _context.next = 6;\n                return currWeatherApiCall.json();\n\n              case 6:\n                currWeatherData = _context.sent;\n                _context.next = 9;\n                return fetch(\"https://api.openweathermap.org/data/2.5/forecast?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY));\n\n              case 9:\n                forecastApiCall = _context.sent;\n                hourlyWeather = [];\n                this.setState({\n                  temperature: currWeatherData.main.temp,\n                  humidity: currWeatherData.main.humidity,\n                  city: currWeatherData.name,\n                  country: currWeatherData.sys.country,\n                  description: currWeatherData.weather[0].description,\n                  error: null,\n                  hourlyWeather: hourlyWeather\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fiveDayForecast() {\n        return _fiveDayForecast.apply(this, arguments);\n      }\n\n      return fiveDayForecast;\n    }()\n  }, {\n    key: \"getWeather\",\n    value: function () {\n      var _getWeather = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var app, city, country, currWeatherApiCall, forecastApiCall, currWeatherData, forecastData, forecastDataArray, hourlyWeather;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                app = this;\n                e.preventDefault();\n                city = e.target.elements.city.value;\n                country = e.target.elements.country.value;\n                _context2.next = 6;\n                return fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY));\n\n              case 6:\n                currWeatherApiCall = _context2.sent;\n                _context2.next = 9;\n                return fetch(\"https://api.openweathermap.org/data/2.5/forecast?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY));\n\n              case 9:\n                forecastApiCall = _context2.sent;\n                _context2.next = 12;\n                return currWeatherApiCall.json();\n\n              case 12:\n                currWeatherData = _context2.sent;\n                _context2.next = 15;\n                return forecastApiCall.json();\n\n              case 15:\n                forecastData = _context2.sent;\n                //get the forecast data\n                console.log(forecastData); //make the new array to replace the one in state\n\n                forecastDataArray = [];\n                forecastData.list.forEach(function (item) {\n                  forecastDataArray.push(item);\n                });\n                hourlyWeather = [];\n                this.setState({\n                  temperature: currWeatherData.main.temp,\n                  humidity: currWeatherData.main.humidity,\n                  city: currWeatherData.name,\n                  country: currWeatherData.sys.country,\n                  description: currWeatherData.weather[0].description,\n                  error: null,\n                  forecastDataArray: forecastDataArray,\n                  hourlyWeather: hourlyWeather\n                });\n\n              case 21:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getWeather(_x) {\n        return _getWeather.apply(this, arguments);\n      }\n\n      return getWeather;\n    }()\n  }, {\n    key: \"showHourlyWeather\",\n    value: function showHourlyWeather(e) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state);\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Titles, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(Form, {\n        getWeather: this.getWeather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Current Weather:\")), React.createElement(Weather, {\n        humidity: this.state.humidity,\n        city: this.state.city,\n        country: this.state.country,\n        error: this.state.error,\n        description: this.state.description,\n        temperature: this.state.temperature,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        className: \"forecasth3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"5 Day Forecast:\")), React.createElement(Forecast, {\n        forecastDataArray: this.state.forecastDataArray,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/brian/.nvm/react-weather-app/src/views/WeatherApp/WeatherApp.js"],"names":["React","Titles","Form","Weather","Forecast","ForecastHourly","API_KEY","App","props","state","temperature","undefined","humidity","city","country","description","error","forecastDataArray","hourlyWeather","getWeather","bind","showHourlyWeather","fiveDayForecast","app","fetch","currWeatherApiCall","json","currWeatherData","forecastApiCall","setState","main","temp","name","sys","weather","e","preventDefault","target","elements","value","forecastData","console","log","list","forEach","item","push","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Titles from '../../components/WeatherApp/Titles';\nimport Form from '../../components/WeatherApp/Form';\nimport Weather from '../../components/WeatherApp/Weather';\nimport Forecast from '../../components/WeatherApp/Forecast';\nimport './styles.css';\nimport ForecastHourly from '../ForecastHourly/ForecastHourly';\n\n\n\n\nconst API_KEY = \"016a6f0bc508419a9a9bbb66139efee0\";\n\n\n\nexport default class App extends React.Component{\n      constructor(props){\n            super(props);\n            this.state = {\n                  temperature:undefined,\n                  humidity:undefined,\n                  city:undefined,\n                  country:undefined,\n                  description:undefined,\n                  error:null,\n                  forecastDataArray:[],\n                  hourlyWeather:[]\n            }\n            this.getWeather = this.getWeather.bind(this);\n            this.showHourlyWeather = this.showHourlyWeather.bind(this);\n\n      }\n\n      componentDidMount(){\n            this.fiveDayForecast();\n      }\n\n      async fiveDayForecast(){    \n            let app = this;\n            const currWeatherApiCall = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_KEY}`);\n            const currWeatherData = await currWeatherApiCall.json();\n            const forecastApiCall = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${API_KEY}`);\n\n            const hourlyWeather = [];\n\n            \n\n            \n            this.setState({\n                  temperature:currWeatherData.main.temp,\n                  humidity:currWeatherData.main.humidity,\n                  city:currWeatherData.name,\n                  country:currWeatherData.sys.country,\n                  description:currWeatherData.weather[0].description,\n                  error:null,\n                  hourlyWeather:hourlyWeather\n            })\n      }\n\n      async getWeather(e){    \n            let app = this;\n            e.preventDefault();\n            const city = e.target.elements.city.value;\n            const country = e.target.elements.country.value;\n            const currWeatherApiCall = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`);\n            const forecastApiCall = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${API_KEY}`);\n            const currWeatherData = await currWeatherApiCall.json();\n            let forecastData = await forecastApiCall.json();\n            //get the forecast data\n            console.log(forecastData);\n            //make the new array to replace the one in state\n            const forecastDataArray = [];\n            \n            forecastData.list.forEach(function(item){\n\n                  forecastDataArray.push(item);\n                  \n            })\n\n            const hourlyWeather = [];\n\n            \n\n            \n            this.setState({\n                  temperature:currWeatherData.main.temp,\n                  humidity:currWeatherData.main.humidity,\n                  city:currWeatherData.name,\n                  country:currWeatherData.sys.country,\n                  description:currWeatherData.weather[0].description,\n                  error:null,\n                  forecastDataArray:forecastDataArray,\n                  hourlyWeather:hourlyWeather\n            })\n      }\n\n      showHourlyWeather(e){\n\n      }\n\n      render(){\n            console.log(this.state)\n            return(\n                  <div className=\"container\">\n                        <Titles/>\n                        <Form \n                              getWeather={this.getWeather}\n                        />\n                        <h3><strong>Current Weather:</strong></h3>\n                        <Weather \n                              humidity={this.state.humidity}\n                              city={this.state.city}\n                              country={this.state.country}\n                              error={this.state.error}\n                              description={this.state.description}\n                              temperature={this.state.temperature}\n                        />  \n                        <h3 className=\"forecasth3\"><strong>5 Day Forecast:</strong></h3>\n                        <Forecast\n                              forecastDataArray={this.state.forecastDataArray}\n                        >\n                              \n                        </Forecast>\n                        {/* <ForecastHourly \n                                    hourlyWeather={this.state.hourlyWeather}\n                              /> */}\n\n                        \n                  </div>\n                 \n            )\n      }\n}\n\n"]},"metadata":{},"sourceType":"module"}