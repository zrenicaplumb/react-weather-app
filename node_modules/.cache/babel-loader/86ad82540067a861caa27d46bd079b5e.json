{"ast":null,"code":"import _classCallCheck from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/brian/.nvm/react-weather-app/src/components/Forecast.js\";\nimport React from 'react';\n\nvar Forecast =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Forecast, _React$Component);\n\n  function Forecast() {\n    _classCallCheck(this, Forecast);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Forecast).apply(this, arguments));\n  }\n\n  _createClass(Forecast, [{\n    key: \"render\",\n    //save date as variable\n    // check each item, if date is different, render a new card for that day\n    // be able to click on the card ,takes you to details component which shows hourly report\n    // this.K2F = this.k2F.bind(this);\n    // K2F(num){\n    //       let parsedNum = parseFloat(num);\n    //       return (parsedNum-273.15)*(1.8)+32;\n    // }\n    value: function render() {\n      //       const weatherArray = [];\n      //      this.props.forecastDataArray.forEach(function(item){\n      //            item.weather.forEach(function(item){\n      //                   weatherArray.push(item);\n      //            })\n      //      })\n      //      console.log(weatherArray);\n      var prevDate = '';\n      return React.createElement(\"div\", {\n        className: \"forecast\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, this.props.forecastDataArray.map(function (item) {\n        var date = item.dt_txt.slice(9, 10);\n        var weather = item.weather[0];\n\n        switch (weather.description) {\n          case 'clear sky':\n            //cahnge background\n            break;\n\n          case 'light rain':\n            //\n            break;\n\n          case 'scattered clouds':\n            //\n            break;\n\n          case 'broken clouds':\n            //\n            break;\n        }\n\n        console.log(prevDate);\n\n        if (date != prevDate) {\n          prevDate = date;\n          return React.createElement(\"div\", {\n            className: \"fieldGroup\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, item.dt_txt.slice(0, 10)), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, Math.round((item.main.temp - 273.15) * 1.8 + 32) + ' F'), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, weather.description));\n        }\n      }));\n    }\n  }]);\n\n  return Forecast;\n}(React.Component);\n\nexport { Forecast as default };","map":{"version":3,"sources":["/Users/brian/.nvm/react-weather-app/src/components/Forecast.js"],"names":["React","Forecast","prevDate","props","forecastDataArray","map","item","date","dt_txt","slice","weather","description","console","log","Math","round","main","temp","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEqBC,Q;;;;;;;;;;;;;AACf;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;6BAEQ;AACR;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACM,UAAIC,QAAQ,GAAG,EAAf;AACA,aAEM;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGW,KAAKC,KAAL,CAAWC,iBAAX,CAA6BC,GAA7B,CAAiC,UAASC,IAAT,EAAc;AACxC,YAAIC,IAAI,GAAGD,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAoB,EAApB,CAAX;AACA,YAAIC,OAAO,GAAGJ,IAAI,CAACI,OAAL,CAAa,CAAb,CAAd;;AACA,gBAAOA,OAAO,CAACC,WAAf;AACM,eAAK,WAAL;AACM;AACA;;AAEN,eAAK,YAAL;AACM;AACA;;AAEN,eAAK,kBAAL;AACA;AACA;;AAEA,eAAK,eAAL;AACA;AACA;AAfN;;AAkBAC,QAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;;AACA,YAAGK,IAAI,IAAIL,QAAX,EAAoB;AACdA,UAAAA,QAAQ,GAAGK,IAAX;AACA,iBACM;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAID,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAoB,EAApB,CAAJ,CADN,EAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIK,IAAI,CAACC,KAAL,CAAW,CAACT,IAAI,CAACU,IAAL,CAAUC,IAAV,GAAiB,MAAlB,IAA6B,GAA7B,GAAoC,EAA/C,IAAqD,IAAzD,CAFN,EAGM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIP,OAAO,CAACC,WAAZ,CAHN,CADN;AAUL;AAEP,OApCD,CAHX,CAFN;AA+CL;;;;EAvE+BX,KAAK,CAACkB,S;;SAAvBjB,Q","sourcesContent":["import React from 'react';\n\nexport default class Forecast extends React.Component{\n      //save date as variable\n      // check each item, if date is different, render a new card for that day\n      // be able to click on the card ,takes you to details component which shows hourly report\n\n      // this.K2F = this.k2F.bind(this);\n\n      // K2F(num){\n      //       let parsedNum = parseFloat(num);\n      //       return (parsedNum-273.15)*(1.8)+32;\n      // }\n      \n      render(){\n      //       const weatherArray = [];\n            \n      //      this.props.forecastDataArray.forEach(function(item){\n      //            item.weather.forEach(function(item){\n      //                   weatherArray.push(item);\n                        \n      //            })\n                 \n      //      })\n      //      console.log(weatherArray);\n            let prevDate = '';\n            return(\n                  \n                  <div className=\"forecast\">\n                        \n                       {\n                             this.props.forecastDataArray.map(function(item){\n                                    let date = item.dt_txt.slice(9,10);\n                                    let weather = item.weather[0];\n                                    switch(weather.description){\n                                          case 'clear sky':\n                                                //cahnge background\n                                                break;\n                                    \n                                          case 'light rain':\n                                                //\n                                                break;\n                                    \n                                          case 'scattered clouds':\n                                          //\n                                          break;\n\n                                          case 'broken clouds':\n                                          //\n                                          break;\n\n                                    }\n                                    console.log(prevDate);\n                                    if(date != prevDate){\n                                          prevDate = date;\n                                          return(\n                                                <div className=\"fieldGroup\">\n                                                      <p>{item.dt_txt.slice(0,10)}</p>\n                                                      <p>{Math.round((item.main.temp - 273.15) * (1.8) + 32) + ' F'}</p>\n                                                      <p>{weather.description}</p>\n                                                </div>\n                                                \n\n                                          )\n                                        \n                                    }\n\n                             })\n                       }\n                        \n                        \n                  </div>\n            )\n      }\n}"]},"metadata":{},"sourceType":"module"}