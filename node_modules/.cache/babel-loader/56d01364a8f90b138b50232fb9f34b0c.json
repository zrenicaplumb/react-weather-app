{"ast":null,"code":"import _classCallCheck from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/brian/.nvm/react-weather-app/src/components/RecipeApp/RecipeDetails.js\";\nimport React from 'react';\nimport Nutrients from '../../components/RecipeApp/Nutrients';\n\nvar RecipeDetails =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RecipeDetails, _React$Component);\n\n  function RecipeDetails() {\n    _classCallCheck(this, RecipeDetails);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RecipeDetails).apply(this, arguments));\n  }\n\n  _createClass(RecipeDetails, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      var state = this.props.location.state;\n      return React.createElement(\"div\", {\n        className: \"recipeDetails\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: state.image,\n        alt: state.alt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"recipeInfoWrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, state.label), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"Calories: \", Math.round(state.calories)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Calories per serving: \", Math.round(state.calories / state.yield)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Serves: \", state.yield), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Source: \", React.createElement(\"a\", {\n        href: state.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, state.url)), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Nutrition Facts\"), React.createElement(\"div\", {\n        className: \"nutritionFacts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, state.nutrition.map(function (nutrient) {\n        return React.createElement(Nutrients, {\n          label: nutrient.label,\n          total: nutrient.total,\n          daily: nutrient.daily,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return RecipeDetails;\n}(React.Component);\n\nexport { RecipeDetails as default };","map":{"version":3,"sources":["/Users/brian/.nvm/react-weather-app/src/components/RecipeApp/RecipeDetails.js"],"names":["React","Nutrients","RecipeDetails","console","log","props","state","location","image","alt","label","Math","round","calories","yield","url","nutrition","map","nutrient","total","daily","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;;IAEqBC,a;;;;;;;;;;;;;6BACP;AACFC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,UAAMC,KAAK,GAAG,KAAKD,KAAL,CAAWE,QAAX,CAAoBD,KAAlC;AACA,aACM;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACE,KAAhB;AAAuB,QAAA,GAAG,EAAEF,KAAK,CAACG,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADN,EAEM;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKH,KAAK,CAACI,KAAX,CADN,EAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAcC,IAAI,CAACC,KAAL,CAAWN,KAAK,CAACO,QAAjB,CAAd,CAFN,EAGM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA0BF,IAAI,CAACC,KAAL,CAAWN,KAAK,CAACO,QAAN,GAAeP,KAAK,CAACQ,KAAhC,CAA1B,CAHN,EAKM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAYR,KAAK,CAACQ,KAAlB,CALN,EAOM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAW;AAAG,QAAA,IAAI,EAAER,KAAK,CAACS,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBT,KAAK,CAACS,GAA3B,CAAX,CAPN,EAOwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAPxD,EAQM;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGOT,KAAK,CAACU,SAAN,CAAgBC,GAAhB,CAAoB,UAASC,QAAT,EAAkB;AAEjC,eACM,oBAAC,SAAD;AACM,UAAA,KAAK,EAAEA,QAAQ,CAACR,KADtB;AAEM,UAAA,KAAK,EAAEQ,QAAQ,CAACC,KAFtB;AAGM,UAAA,KAAK,EAAED,QAAQ,CAACE,KAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADN;AAOL,OATA,CAHP,CARN,CAFN,CADN;AA+BL;;;;EAnCoCpB,KAAK,CAACqB,S;;SAA5BnB,a","sourcesContent":["import React from 'react';\nimport Nutrients from '../../components/RecipeApp/Nutrients';\n\nexport default class RecipeDetails extends React.Component{\n      render(){\n            console.log(this.props);\n            const state = this.props.location.state;\n            return(\n                  <div className=\"recipeDetails\">\n                        <img src={state.image} alt={state.alt}/>\n                        <div className=\"recipeInfoWrap\">\n                              <h4>{state.label}</h4>\n                              <p>Calories: {Math.round(state.calories)}</p>\n                              <p>Calories per serving: {Math.round(state.calories/state.yield)}</p>\n\n                              <p>Serves: {state.yield}</p>\n\n                              <p>Source: <a href={state.url}>{state.url}</a></p><h3>Nutrition Facts</h3>\n                              <div className=\"nutritionFacts\">\n                                    \n                                    \n                                    {state.nutrition.map(function(nutrient){\n                                          \n                                          return(\n                                                <Nutrients\n                                                      label={nutrient.label}\n                                                      total={nutrient.total}\n                                                      daily={nutrient.daily}\n                                                />  \n                                          )\n                                    })}\n                              </div>\n                              \n                              \n                        </div>     \n\n                  </div>\n            )\n      }\n}"]},"metadata":{},"sourceType":"module"}