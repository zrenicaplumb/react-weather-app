{"ast":null,"code":"import _regeneratorRuntime from \"/Users/brian/.nvm/react-app-2/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/brian/.nvm/react-app-2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/brian/.nvm/react-app-2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brian/.nvm/react-app-2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brian/.nvm/react-app-2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brian/.nvm/react-app-2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brian/.nvm/react-app-2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/brian/.nvm/react-app-2/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/brian/.nvm/react-app-2/src/App.js\";\nimport React from 'react';\nimport Titles from './components/Titles';\nimport Form from './components/Form';\nimport Weather from './components/Weather';\nimport './bootstrap.min.css';\nimport './styles.css';\nvar API_KEY = \"016a6f0bc508419a9a9bbb66139efee0\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      temperature: undefined,\n      humidity: undefined,\n      city: undefined,\n      country: undefined,\n      description: undefined,\n      error: null\n    };\n    _this.getWeather = _this.getWeather.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"getWeather\",\n    value: function () {\n      var _getWeather = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var city, country, api_call, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                city = e.target.elements.city.value;\n                country = e.target.elements.country.value;\n                _context.next = 5;\n                return fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY));\n\n              case 5:\n                api_call = _context.sent;\n                _context.next = 8;\n                return api_call.json();\n\n              case 8:\n                data = _context.sent;\n                console.log(data);\n\n                if (!data) {\n                  this.setState({\n                    error: true\n                  });\n                  console.log('there is no data');\n                } else {\n                  this.setState({\n                    temperature: data.main.temp,\n                    humidity: data.main.humidity,\n                    city: data.name,\n                    country: data.sys.country,\n                    description: data.weather[0].description,\n                    error: null\n                  });\n                }\n\n                console.log(this.state);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function getWeather(_x) {\n        return _getWeather.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Titles, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Form, {\n        getWeather: this.getWeather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Weather, {\n        humidity: this.state.humidity,\n        city: this.state.city,\n        country: this.state.country,\n        description: this.state.description,\n        temperature: this.state.temperature,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/brian/.nvm/react-app-2/src/App.js"],"names":["React","Titles","Form","Weather","API_KEY","App","props","state","temperature","undefined","humidity","city","country","description","error","getWeather","bind","e","preventDefault","target","elements","value","fetch","api_call","json","data","console","log","setState","main","temp","name","sys","weather","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,qBAAP;AACA,OAAO,cAAP;AAEA,IAAMC,OAAO,GAAG,kCAAhB;;IAGqBC,G;;;;;AACf,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACZ,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAEPC,MAAAA,WAAW,EAACC,SAFL;AAGPC,MAAAA,QAAQ,EAACD,SAHF;AAKPE,MAAAA,IAAI,EAACF,SALE;AAMPG,MAAAA,OAAO,EAACH,SAND;AAQPI,MAAAA,WAAW,EAACJ,SARL;AASPK,MAAAA,KAAK,EAAC;AATC,KAAb;AAWA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AAbY;AAejB;;;;;;;gDAEgBC,C;;;;;;AAEXA,gBAAAA,CAAC,CAACC,cAAF;AACMP,gBAAAA,I,GAAOM,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,K;AAC9BT,gBAAAA,O,GAAUK,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBR,OAAlB,CAA0BS,K;;uBACnBC,KAAK,6DAAsDX,IAAtD,cAA8DC,OAA9D,oBAA+ER,OAA/E,E;;;AAAtBmB,gBAAAA,Q;;uBACaA,QAAQ,CAACC,IAAT,E;;;AAAbC,gBAAAA,I;AACNC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAEA,oBAAG,CAACA,IAAJ,EAAS;AACH,uBAAKG,QAAL,CAAc;AACRd,oBAAAA,KAAK,EAAC;AADE,mBAAd;AAGDY,kBAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACJ,iBALD,MAMI;AACE,uBAAKC,QAAL,CAAc;AAERpB,oBAAAA,WAAW,EAACiB,IAAI,CAACI,IAAL,CAAUC,IAFd;AAGRpB,oBAAAA,QAAQ,EAACe,IAAI,CAACI,IAAL,CAAUnB,QAHX;AAIRC,oBAAAA,IAAI,EAACc,IAAI,CAACM,IAJF;AAKRnB,oBAAAA,OAAO,EAACa,IAAI,CAACO,GAAL,CAASpB,OALT;AAORC,oBAAAA,WAAW,EAACY,IAAI,CAACQ,OAAL,CAAa,CAAb,EAAgBpB,WAPpB;AAQRC,oBAAAA,KAAK,EAAC;AARE,mBAAd;AAWL;;AAEDY,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAjB;;;;;;;;;;;;;;;;6BASE;AACF,aAEM;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADN,EAEM,oBAAC,IAAD;AACM,QAAA,UAAU,EAAE,KAAKQ,UADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFN,EAKM,oBAAC,OAAD;AAGM,QAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWG,QAH3B;AAKM,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWI,IALvB;AAMM,QAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWK,OAN1B;AAQM,QAAA,WAAW,EAAE,KAAKL,KAAL,CAAWM,WAR9B;AASM,QAAA,WAAW,EAAE,KAAKN,KAAL,CAAWC,WAT9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALN,CAFN;AAqBL;;;;EA9E0BR,KAAK,CAACkC,S;;SAAlB7B,G","sourcesContent":["import React from 'react';\nimport Titles from './components/Titles';\nimport Form from './components/Form';\nimport Weather from './components/Weather';\nimport './bootstrap.min.css';\nimport './styles.css';\n\nconst API_KEY = \"016a6f0bc508419a9a9bbb66139efee0\";\n\n\nexport default class App extends React.Component{\n      constructor(props){\n            super(props);\n            this.state = {\n                 \n                  temperature:undefined,\n                  humidity:undefined,\n              \n                  city:undefined,\n                  country:undefined,\n                  \n                  description:undefined,\n                  error:null,\n            }\n            this.getWeather = this.getWeather.bind(this);\n            \n      }\n\n      async getWeather(e){    \n            \n            e.preventDefault();\n            const city = e.target.elements.city.value;\n            const country = e.target.elements.country.value;\n            const api_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`);\n            const data = await api_call.json();\n            console.log(data);\n\n            if(!data){\n                  this.setState({\n                        error:true\n                  })\n                 console.log('there is no data');\n            }\n            else{\n                  this.setState({\n                  \n                        temperature:data.main.temp,\n                        humidity:data.main.humidity,\n                        city:data.name,\n                        country:data.sys.country,\n                        \n                        description:data.weather[0].description,\n                        error:null,\n                        \n                  })\n            }\n           \n            console.log(this.state);\n            \n\n            \n            \n\n\n      }\n\n      render(){\n            return(\n                  \n                  <div className=\"container\">\n                        <Titles/>\n                        <Form \n                              getWeather={this.getWeather}\n                        />\n                        <Weather \n                              \n                              \n                              humidity={this.state.humidity}\n                          \n                              city={this.state.city}\n                              country={this.state.country}\n                              \n                              description={this.state.description}\n                              temperature={this.state.temperature}\n                        />  \n                  </div>\n                 \n            )\n      }\n}\n"]},"metadata":{},"sourceType":"module"}