{"ast":null,"code":"import _classCallCheck from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/brian/.nvm/react-weather-app/src/components/Forecast.js\";\nimport React from 'react';\n\nvar Forecast =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Forecast, _React$Component);\n\n  function Forecast() {\n    _classCallCheck(this, Forecast);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Forecast).apply(this, arguments));\n  }\n\n  _createClass(Forecast, [{\n    key: \"render\",\n    //save date as varaible\n    // check each item, if date is different, render a new card for that day\n    // be able to click on the card ,takes you to details component which shows hourly report\n    value: function render() {\n      var weatherArray = [];\n      this.props.forecastDataArray.forEach(function (item) {\n        item.weather.forEach(function (item) {\n          weatherArray.push(item);\n        });\n        console.log(weatherArray);\n      });\n      return React.createElement(\"div\", {\n        className: \"forecast\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, this.props.forecastDataArray && this.props.forecastDataArray.map(function (item) {\n        return React.createElement(\"div\", {\n          className: \"weatherCard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"fieldGroup\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"Date: \"), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, item.dt_txt)), React.createElement(\"div\", {\n          className: \"fieldGroup\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"Temp: \"), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, item.main.temp)), React.createElement(\"div\", {\n          className: \"fieldGroup\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"Weather:\"), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, item.weather[0].description)));\n      }));\n    }\n  }]);\n\n  return Forecast;\n}(React.Component);\n\nexport { Forecast as default };","map":{"version":3,"sources":["/Users/brian/.nvm/react-weather-app/src/components/Forecast.js"],"names":["React","Forecast","weatherArray","props","forecastDataArray","forEach","item","weather","push","console","log","map","dt_txt","main","temp","description","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEqBC,Q;;;;;;;;;;;;;AACf;AACA;AACA;6BAGQ;AACF,UAAMC,YAAY,GAAG,EAArB;AAED,WAAKC,KAAL,CAAWC,iBAAX,CAA6BC,OAA7B,CAAqC,UAASC,IAAT,EAAc;AAC7CA,QAAAA,IAAI,CAACC,OAAL,CAAaF,OAAb,CAAqB,UAASC,IAAT,EAAc;AAC5BJ,UAAAA,YAAY,CAACM,IAAb,CAAkBF,IAAlB;AAEN,SAHD;AAIAG,QAAAA,OAAO,CAACC,GAAR,CAAYR,YAAZ;AACL,OAND;AAOC,aACM;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACO,KAAKC,KAAL,CAAWC,iBAAX,IAAiC,KAAKD,KAAL,CAAWC,iBAAX,CAA6BO,GAA7B,CAAiC,UAASL,IAAT,EAAc;AAC3E,eACM;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACM;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADN,EAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOA,IAAI,CAACM,MAAZ,CAFN,CADN,EAKM;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADN,EAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAON,IAAI,CAACO,IAAL,CAAUC,IAAjB,CAFN,CALN,EASM;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADN,EAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOR,IAAI,CAACC,OAAL,CAAa,CAAb,EAAgBQ,WAAvB,CAFN,CATN,CADN;AAoBL,OArBiC,CADxC,CADN;AA4BL;;;;EA5C+Bf,KAAK,CAACgB,S;;SAAvBf,Q","sourcesContent":["import React from 'react';\n\nexport default class Forecast extends React.Component{\n      //save date as varaible\n      // check each item, if date is different, render a new card for that day\n      // be able to click on the card ,takes you to details component which shows hourly report\n\n      \n      render(){\n            const weatherArray = [];\n            \n           this.props.forecastDataArray.forEach(function(item){\n                 item.weather.forEach(function(item){\n                        weatherArray.push(item);\n                        \n                 })\n                 console.log(weatherArray);\n           })\n            return(\n                  <div className=\"forecast\">\n                        {this.props.forecastDataArray &&  this.props.forecastDataArray.map(function(item){\n                              return(\n                                    <div className=\"weatherCard\">\n                                          <div className=\"fieldGroup\">\n                                                <label>Date: </label>\n                                                <span>{item.dt_txt}</span>\n                                          </div>\n                                          <div className=\"fieldGroup\">\n                                                <label>Temp: </label>\n                                                <span>{item.main.temp}</span>\n                                          </div>\n                                          <div className=\"fieldGroup\">\n                                                <label>Weather:</label>\n                                                <span>{item.weather[0].description}</span>\n                                          </div>\n\n                                     \n\n                                    </div>\n                              )\n                              \n                        })}\n                        \n                        \n                  </div>\n            )\n      }\n}"]},"metadata":{},"sourceType":"module"}