{"ast":null,"code":"import _regeneratorRuntime from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/brian/.nvm/react-weather-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/brian/.nvm/react-weather-app/src/App.js\";\nimport React from 'react';\nimport Titles from './components/Titles';\nimport Form from './components/Form';\nimport Weather from './components/Weather';\nimport './bootstrap.min.css';\nimport './styles.css';\nvar API_KEY = \"016a6f0bc508419a9a9bbb66139efee0\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      temperature: undefined,\n      humidity: undefined,\n      city: undefined,\n      country: undefined,\n      description: undefined,\n      error: null,\n      forecastArray: []\n    };\n    _this.getWeather = _this.getWeather.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"getWeather\",\n    value: function () {\n      var _getWeather = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var city, country, currWeatherApiCall, forecastApiCall, currWeatherData, forecastData, forecastArray;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                city = e.target.elements.city.value;\n                country = e.target.elements.country.value;\n                _context.next = 5;\n                return fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY));\n\n              case 5:\n                currWeatherApiCall = _context.sent;\n                _context.next = 8;\n                return fetch(\"https://api.openweathermap.org/data/2.5/forecast?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY));\n\n              case 8:\n                forecastApiCall = _context.sent;\n                _context.next = 11;\n                return currWeatherApiCall.json();\n\n              case 11:\n                currWeatherData = _context.sent;\n                _context.next = 14;\n                return forecastApiCall.json();\n\n              case 14:\n                forecastData = _context.sent;\n                console.log(forecastData);\n                console.log(forecastData.list);\n                forecastArray = [];\n                console.log(forecastArray);\n                forecastData.list.forEach(function (list) {\n                  var date = list.dt_txt;\n                  var temp = list.main.temp;\n                  forecastArray.push(list);\n                  var weather = list.weather[0].main;\n                  console.log(date);\n                  console.log(temp);\n                  console.log(weather);\n                });\n                this.setState({\n                  temperature: currWeatherData.main.temp,\n                  humidity: currWeatherData.main.humidity,\n                  city: currWeatherData.name,\n                  country: currWeatherData.sys.country,\n                  description: currWeatherData.weather[0].description,\n                  error: null,\n                  foreCastArray: forecastArray\n                });\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function getWeather(_x) {\n        return _getWeather.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Titles, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Form, {\n        getWeather: this.getWeather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Weather, {\n        humidity: this.state.humidity,\n        city: this.state.city,\n        country: this.state.country,\n        error: this.state.error,\n        description: this.state.description,\n        temperature: this.state.temperature,\n        forecastArray: this.state.forecastArray,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/brian/.nvm/react-weather-app/src/App.js"],"names":["React","Titles","Form","Weather","API_KEY","App","props","state","temperature","undefined","humidity","city","country","description","error","forecastArray","getWeather","bind","e","preventDefault","target","elements","value","fetch","currWeatherApiCall","forecastApiCall","json","currWeatherData","forecastData","console","log","list","forEach","date","dt_txt","temp","main","push","weather","setState","name","sys","foreCastArray","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Titles from './components/Titles';\nimport Form from './components/Form';\nimport Weather from './components/Weather';\nimport './bootstrap.min.css';\nimport './styles.css';\n\nconst API_KEY = \"016a6f0bc508419a9a9bbb66139efee0\";\n\nexport default class App extends React.Component{\n      constructor(props){\n            super(props);\n            this.state = {\n                  temperature:undefined,\n                  humidity:undefined,\n                  city:undefined,\n                  country:undefined,\n                  description:undefined,\n                  error:null,\n                  forecastArray:[],\n            }\n            this.getWeather = this.getWeather.bind(this);\n      }\n\n      async getWeather(e){    \n            e.preventDefault();\n            const city = e.target.elements.city.value;\n            const country = e.target.elements.country.value;\n            const currWeatherApiCall = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`);\n            const forecastApiCall = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${API_KEY}`);\n            const currWeatherData = await currWeatherApiCall.json();\n            const forecastData = await forecastApiCall.json();\n            console.log(forecastData);\n\n            console.log(forecastData.list);\n\n            const forecastArray = [];\n\n            console.log(forecastArray);\n\n            forecastData.list.forEach(function(list){\n                  let date = list.dt_txt;\n                  let temp = list.main.temp;\n                  forecastArray.push(list);\n                  let weather = list.weather[0].main;\n                  console.log(date)\n                  console.log(temp)\n\n                  console.log(weather)\n\n            })\n\n            \n            \n            \n            this.setState({\n                  temperature:currWeatherData.main.temp,\n                  humidity:currWeatherData.main.humidity,\n                  city:currWeatherData.name,\n                  country:currWeatherData.sys.country,\n                  description:currWeatherData.weather[0].description,\n                  error:null,\n                  foreCastArray:forecastArray,\n            })\n            \n      }\n\n      render(){\n            return(\n                  <div className=\"container\">\n                        <Titles/>\n                        <Form \n                              getWeather={this.getWeather}\n                        />\n                        <Weather \n                              humidity={this.state.humidity}\n                              city={this.state.city}\n                              country={this.state.country}\n                              error={this.state.error}\n                              description={this.state.description}\n                              temperature={this.state.temperature}\n                              forecastArray={this.state.forecastArray}\n                           \n                        />  \n                        \n                  </div>\n                 \n            )\n      }\n}\n"]},"metadata":{},"sourceType":"module"}